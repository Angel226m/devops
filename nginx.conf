events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Configuración de logs
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Configuraciones básicas
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    client_max_body_size 10M;

    # Rate limiting para seguridad
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;

    # Configuración de gzip
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        image/svg+xml;

    # Headers de seguridad globales
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Upstream para el backend (comunicación interna)
    upstream backend_servers {
        server backend:8080;
        keepalive 32;
    }

    # Upstream para el frontend (comunicación interna)
    upstream frontend_servers {
        server frontend-container:80;
        keepalive 32;
    }

    # Redirección HTTP a HTTPS
    server {
        listen 80;
        server_name admin.angelproyect.com www.admin.angelproyect.com 178.156.187.141;

        # Solo permitir health check en HTTP
        location /health {
            access_log off;
            return 200 "nginx-proxy-healthy\n";
            add_header Content-Type text/plain;
        }

        # Redirigir todo lo demás a HTTPS
        location / {
            return 301 https://admin.angelproyect.com$request_uri;
        }
    }

    # Servidor HTTPS principal
    server {
        listen 443 ssl;
        server_name admin.angelproyect.com www.admin.angelproyect.com;

        # SSL con tus certificados
        ssl_certificate /etc/nginx/certs/domain.cert.pem;
        ssl_certificate_key /etc/nginx/certs/private.key.pem;

        # Configuración SSL moderna
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_session_tickets off;

        # HSTS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

        # Health check HTTPS
        location /health {
            access_log off;
            return 200 "admin.angelproyect.com-healthy\n";
            add_header Content-Type text/plain;
        }

        # API del backend - comunicación interna entre contenedores
        location /api/ {
            limit_req zone=api burst=20 nodelay;

            # Proxy interno al contenedor backend
            proxy_pass http://backend_servers/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Host $host;

            # CORS headers
            add_header Access-Control-Allow-Origin "https://admin.angelproyect.com" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept, X-Requested-With" always;
            add_header Access-Control-Allow-Credentials true always;

            # Preflight OPTIONS requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "https://admin.angelproyect.com" always;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
                add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept, X-Requested-With" always;
                add_header Access-Control-Allow-Credentials true always;
                add_header Access-Control-Max-Age 1728000 always;
                add_header Content-Type text/plain always;
                add_header Content-Length 0 always;
                return 204;
            }

            # Timeouts optimizados
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }

        # Frontend React - ruta raíz
        location / {
            # Proxy interno al contenedor frontend
            proxy_pass http://frontend_servers;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_redirect off;  # Evitar redirecciones infinitas
        }

        # Fallback para React Router
        error_page 404 = @fallback;
        location @fallback {
            proxy_pass http://frontend_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }
    }
}







 
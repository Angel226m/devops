version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: sistema-tours-db
    environment:
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres123}
      - POSTGRES_DB=${DB_NAME:-sistema_tours}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    ports:
      - "127.0.0.1:5432:5432"  # Solo acceso local
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d:ro
      - ./backups:/backups
    restart: unless-stopped
    networks:
      - my-shared-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-sistema_tours}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: backend
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-sistema_tours}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres123}
      - SERVER_PORT=8080
      - SERVER_HOST=0.0.0.0
      - GIN_MODE=release
      - ENV=production
      - APP_ENV=production
      - JWT_SECRET=${JWT_SECRET:-cambiar_este_secreto_en_produccion}
      # ✅ CORS configurado para tu dominio específico
      - CORS_ORIGIN=https://admin.angelproyect.com
    expose:
      - "8080"  # Solo expuesto internamente
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - my-shared-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    environment:
      # ✅ Frontend configurado para comunicarse internamente
      - REACT_APP_API_URL=https://admin.angelproyect.com/api
      - NODE_ENV=production
    expose:
      - "80"  # Solo expuesto internamente
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - my-shared-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"    # HTTP público
      - "443:443"  # HTTPS público
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/certs:/etc/nginx/certs:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - my-shared-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  my-shared-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16root@devops:~/final#